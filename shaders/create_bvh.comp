// TODO implement a gpu bvh construction algorithm

// void create_BVH_list() {

//     int sphere_array_length = spheres.data.length();
//     int other_array_length = 0;

//     int total_length = sphere_array_length + other_array_length;

    // Create a Node for every object in all object lists
    // int running_length = 0;
    // for (int i = 0; i < sphere_array_length; i++) {
    //     BVHNode temp = empty_BVHNode();
    //     temp.children[0] = ChildIndex(i, is_sphere);
    //     temp.bbox = sphere_AABB(spheres.data[i]);
    //     temp.self = -1;
    //     BVH.list[i] = temp;
    // }
    // running_length += sphere_array_length;

    // pseudo code for other object lists
    // for (int i = 0; i < other_array_length; i++) {
    //     BVHNode temp = empty_BVHNode();
    //     temp.children[0] = ChildIndex(-1, object_type, i, 0);
    //     temp.bbox = AABB_of_obj(obj_list.data[i]);
    //     temp.self = -1;
    //     BVH.list[i + running_length] = temp;
    // }
    // running_length += other_array_length;

    // Simple, naive merge method
    // for (int i = 0; i < running_length - 1; i++) {
    //     if (BVH.list[i].self != -2) {
    //         continue;
    //     }
    //     for (int j = i + 1; j < running_length; j++) {
    //         // If node doesn't exist, continue
    //         if (BVH.list[j].self != -2) {continue;}
    //         // If nodes don't intersect, continue
    //         if (!intersect_AABB(BVH.list[i], BVH.list[j])) {continue;}

    //     }
    // }

    // Merge intersecting nodes
    // for (int i = 0; i < running_length - 1; i++) {
    //     BVHNode node1 = BVH.list[i];
    //     if (node1.self != -2) {
    //         continue;
    //     }
    //     for (int j = i + 1; j < running_length; j++) {
    //         BVHNode node2 = BVH.list[j];
    //         // If node doesn't exist, continue
    //         if (node2.self != -2) {continue;}
    //         // If nodes don't intersect, continue
    //         if (!intersect_AABB(node1.bbox, node2.bbox)) {continue;}

    //         // if ()

    //     }
    // }

// }

